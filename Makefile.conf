# vim: set ft=make:
#

# Arduino version (e.g. 23 for 0023, or 105 for 1.0.5, Apparently 10607 for 1.6.7).
# Make sure this matches ARDUINO_DIR below!
#ARDUINO = 	23
ARDUINO = 	10607

# Location of the official Arduino IDE.
# E.g. /usr/local/arduino, or $(HOME)/arduino
# Make sure this matches ARDUINO above!
#ARDUINO_DIR =	/usr/local/pckg/arduino/arduino-0023
ARDUINO_DIR =	/usr/share/arduino/

# Arduino 0.x based on 328P now need the new programmer protocol.
#AVRDUDE_PROGRAMMER = arduino

# Arduino core sources.
ARDUINO_CORE =	$(ARDUINO_DIR)/hardware/arduino/cores/arduino

# User libraries (in ~/sketchbook/libraries/).
# Give the name of the directory containing the library source files.
USER_LIBDIR =	../libraries

# Where are tools like avr-gcc located on your system?
# If you set this, it must end with a slash!
#AVR_TOOLS_PATH = $(ARDUINO_DIR)/hardware/tools/avr/bin/
AVR_TOOLS_PATH = /usr/bin/
#AVR_TOOLS_PATH =

# Warnings.
# A bug in gcc 4.3.x related to progmem might turn a warning into an error
# when using -pedantic. This patch works around the problem:
# http://volker.top.geek.nz/arduino/avr-libc-3.7.1-pgmspace_progmem-fix.diff
# Turning on all warnings shows a large number of less-than-optimal program
# locations in the Arduino sources. Some might turn into errors. Either fix
# your Arduino sources, or turn the warnings off.
OPT_WARN =	-Wall
#OPT_WARN +=	-pedantic
OPT_WARN +=	-Wextra
OPT_WARN +=	-Wmissing-declarations
OPT_WARN +=	-Wmissing-field-initializers
OPT_WARN +=	-Wsystem-headers
OPT_WARN +=	-Wno-variadic-macros
